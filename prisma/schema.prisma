// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// models
model User {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  phone     String
  status    Status   @default(Active)
  isAdmin   Boolean  @default(false)
  routes    Route[]
  ledger    Ledger[]
}

model Route {
  companyId  String   @id @default(uuid())
  name       String
  containers Int      @default(0)
  hours      Int      @default(0)
  miles      Int      @default(0)
  scans      Int      @default(0)
  stops      Int      @default(0)
  creator    User     @relation(fields: [creatorId], references: [id])
  creatorId  String
  ledgers    Ledger[]
}

model Ledger {
  ledgerId   String   @id @default(uuid())
  containers Int      @default(0)
  hours      Int      @default(0)
  miles      Int      @default(0)
  scans      Int      @default(0)
  stops      Int      @default(0)
  total      Float
  routes     Route    @relation(fields: [routeId], references: [companyId], onDelete: NoAction, onUpdate: NoAction)
  routeId    String
  driver     User     @relation(fields: [driverId], references: [id])
  driverId   String
  createdAt  DateTime @default(now()) @db.Date
  updatedAt  DateTime @default(now()) @db.Date
}

enum Status {
  Active
  Disabled
}
